I decided to expand on the Giphy API, since had little knowledge on other APIs out there or any API themes I would want to investigate. 

I started working on making the website look more visually appealing, since I did not know what I wanted to had technically yet. I wanted a background image for the header, but I also wanted it to emphasize the use of this website, so I decided to do some reasearch on moving backgrounds. After some research, I found a site that helped me use java script to move any image from right to left. Loopking around on the web, I found a cute space cat pic that I thought fit the theme perfectly, and also gave me my main color: purple. The background color is a fixed gradient from purple on the top, to white on the bottom. The last thing I touched before cracking down on the technical side of the website was changing layout of the search tools. Now, the search term and the limit where right next to eachother, over the search button, which was now blue and significantly bigger than before. I also added a magnify class in the search term background, to fit it's role.

On the technical side of the board, I first went into implementing a way to keep what the user last typed in the term bar in local storage. I then thought it would be a cool idea if the entire image the website brought up was a link to the view on GIPHY, so I implemented that into the java script. I knew I needed to add new things to the website, so I took inspiration from feedback I got from when I posted the prototype, and added a filter option. It had three options: Normal, By Size, and By Rating (as in G, PG, etc.). I tried to find if the API got my view count or some kind of like count, but found nothing. I also did not know how it normally got gifs, so I just labeled in "normal". Size refers to the file size of the original gif. I also came up with an idea to have the user input a second search term, which java script would add on to the first search term. I also made sure to save the second search term in the local storage.

For final touches, I switch from fixed width to fixed height, which made the images look a lot nicer when pulling them up. I got this inspiration from a google images works, and how the search results are laid out. I used flex boxes to grow and shrink gifs so that the content area was suffinciently used, and I discovered a trick from online so that the last row would just have 1 gif strech the entire area. Using ::after, I was able to define out CSS uses that white space, and so it filled all the extra space, and not the gifs in the final row.
